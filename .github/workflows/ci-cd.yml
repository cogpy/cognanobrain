name: Continuous Integration & Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: true # Allow lint issues during development

    - name: Type check
      run: npx tsc --noEmit

    - name: Build project
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

  consciousness-analysis:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Analyze consciousness modeling components
      run: |
        echo "üß† Analyzing NanoBrain consciousness components..."
        
        # Check for key consciousness modeling files
        if [ -f "src/hooks/useCognitiveEngine.ts" ]; then
          echo "‚úì Cognitive Engine detected"
        fi
        
        if [ -f "src/components/AgentInterface.tsx" ]; then
          echo "‚úì Agent Interface systems active"
        fi
        
        if [ -f "src/components/TimeCrystalVisualization.tsx" ]; then
          echo "‚úì Time Crystal visualization enabled"
        fi
        
        # Count consciousness-related features
        CONSCIOUSNESS_FEATURES=$(grep -r "consciousness\|fractal\|prime\|crystal" src/ --include="*.ts" --include="*.tsx" | wc -l)
        echo "üìä Consciousness features detected: ${CONSCIOUSNESS_FEATURES}"
        
        echo "üåü NanoBrain consciousness analysis complete"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: |
        npm audit --audit-level moderate
      continue-on-error: true

    - name: Check for sensitive files
      run: |
        echo "Scanning for sensitive information..."
        # Check for common sensitive patterns
        if grep -r "password\|secret\|key" src/ --exclude-dir=node_modules || true; then
          echo "‚ö†Ô∏è Potential sensitive data detected - review required"
        else
          echo "‚úì No obvious sensitive data found"
        fi

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [lint-and-test, consciousness-analysis]
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for preview
      run: npm run build

    - name: Deploy preview
      run: |
        echo "üöÄ NanoBrain preview deployment ready"
        echo "Consciousness exploration platform built successfully"
        echo "Preview URL would be available in production setup"

  roadmap-update:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Update roadmap status
      run: |
        echo "üìã Updating NanoBrain roadmap status..."
        echo "Main branch updated - consciousness platform evolution continues"
        echo "Next automated feature implementation scheduled"